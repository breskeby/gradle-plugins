package com.goldin.gradle.about

import com.goldin.gcommons.GCommons
import org.gradle.api.DefaultTask
import org.gradle.api.logging.Logger
import org.gradle.api.tasks.TaskAction

/**
 * {@link AboutPlugin} task
 */
class AboutTask extends DefaultTask
{
    private final Map<String, String> env = System.getenv()
    private final Logger              log = project.logger

    String  fileName
    String  prefix           = 'META-INF'
    boolean dumpSCM          = true
    boolean dumpEnv          = false
    boolean dumpSystem       = false
    boolean dumpPaths        = false
    boolean dumpDependencies = false
    boolean gitStatusProject = true
    String  endOfLine        = 'windows'
    File    directory        = new File( project.buildDir, 'libs' )
    String  include          = '*.jar'
    String  exclude


    @TaskAction
    def createAbout()
    {
        fileName      = fileName ?: "about-${project.group}-${project.name}-${project.version}.txt"
        def split     = { String s -> ( List<String> )( s ? s.split( /,/ ).toList()*.trim().findAll{ it } : null ) }
        def files     = GCommons.file().files( directory, split( include ), split( exclude ))
        def tempFile  = new File( project.buildDir, "tmp/$fileName" )
        def prefix    = (( prefix == '/' ) ? '' : prefix )

        log.info( "Generating \"about\" in [$tempFile.canonicalPath] .." )

        tempFile.write(( " Generated by gradle-about-plugin\n" +
                         scmContent() + buildContent() + serverContent()).
                       stripMargin().readLines()*.replaceAll( /\s+$/, '' ).findAll { it }. // Deleting empty lines
                       join(( 'windows' == endOfLine ) ? '\r\n' : '\n' ))

        log.info( "Generated  \"about\" in [$tempFile.canonicalPath]" )

        for ( file in files )
        {
            def aboutPath = "$file.canonicalPath/$prefix${ prefix ? '/' : '' }$fileName"
            log.info( "Adding \"about\" to [$aboutPath] .." )

            project.ant.zip( destfile : file.canonicalPath,
                             update   : true ){
                zipfileset( file   : tempFile.canonicalPath,
                            prefix : prefix )
            }

            log.info( "Added  \"about\" to [$aboutPath]" )
        }

        GCommons.file().delete( tempFile )
    }


    String serverContent ()
    {
        'sss'
    }

    String buildContent ()
    {
        'bbb'
    }

    String scmContent ()
    {
        'scm'
    }
}
